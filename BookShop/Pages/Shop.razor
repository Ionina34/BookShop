@page "/"
@page "/series/{seriesId:int}"
@inject IShopRepository shop
@inject NavigationManager Navigation

<style>
    .container {
        width: 100%;
    }

    .title {
        width: 100%;
        height: 150px;
    }

    .list {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        margin: 15px;
    }

    .book {
        display: flex;
        flex-wrap: wrap;
        width: 200px;
        height: auto;
        border: 1px solid #f3c1f7;
        margin: 20px 3px;
    }

    .img-btn {
        border: none;
        background-color: white;
        margin: 19px;
        width: 160px;
        padding: 0px;
    }

    .img {
        width: 160px;
    }

    .info {
        font-size: 15px;
        margin: 3px 0px;
        text-align: center;
        width: 100%;
    }

    .price {
        font-weight: bold;
        align-self: flex-end;
    }


    .buy {
        padding: 3px 15px;
        border: none;
        background-color: #f3c1f7;
    }

    .arrange {
        padding: 3px 15px;
        border: none;
        background-color: #ec00fc
    }

    .btn {
        display: flex;
        justify-content: space-around;
        margin-top: auto;
        width: 100%;
    }

    .imgFav {
        width: 30px;
    }

    .fav {
        padding: 3px 15px;
        border-width: 1px;
        border-color: #f3c1f7;
        border-style: solid;
        background-color: white
    }
</style>

<AuthorizeView>
    <Authorized>
        <div class="books-catalog">
            <div class="list">
                @foreach (var b in books)
                {
                    <div class="book">
                        <button class="img-btn"
                            @onclick="@(()=>Navigation.NavigateTo("/book/"+ b.Id.ToString()))">
                            <img class="img" src="@b.BookImage" />
                        </button>
                        <p class="info">@b.Title</p>
                        <p class="info">@b.Author.Name</p>
                        <p class="info price">@b.Price</p>
                        <div class="btn">
                            @{
                                AllCardItem(context.User.Identity.Name);
                                if (cardItems.Any(p => p.BookId == b.Id))
                                {
                                    <button class="arrange"
                                    @onclick="@(()=>Navigation.NavigateTo("/card"))">
                                        Оформить
                                    </button>
                                }
                                else
                                {
                                    <button class="buy" @onclick=@(async ()=>
                                await AddToCart(b.Id,context.User.Identity.Name))>
                                        Купить
                                    </button>
                                }
                            }
                            @{
                                AllFav(context.User.Identity.Name);
                                if (favourites.Any(p => p.BookId == b.Id))
                                {
                                    <button class="fav" @onclick=@(async ()=>
                                await AddToFav(b.Id,context.User.Identity.Name))>
                                        <img class="imgFav" src="css/Image/YesIsFavourite.png" />
                                    </button>
                                }
                                else
                                {
                                    <button class="fav" @onclick=@(async ()=>
                                await AddToFav(b.Id,context.User.Identity.Name))>
                                        <img class="imgFav" src="css/Image/NotFavourite.png" />
                                    </button>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="books-catalog">
            <div class="list">
                @foreach (var b in books)
                {
                    <div class="book">
                        <button class="img-btn"
                            @onclick="@(()=>Navigation.NavigateTo("/book/"+ b.Id.ToString()))">
                            <img class="img" src="@b.BookImage" />
                        </button>
                        <p class="info">@b.Title</p>
                        <p class="info">@b.Author.Name</p>
                        <div class="btn">
                            <p>Войдите в аккаунт</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int seriesId { get; set; }
    private List<Book> books = new List<Book>();
    private List<Favourites> favourites = new List<Favourites>();
    private List<CardItem> cardItems = new List<CardItem>();

    protected override async Task OnInitializedAsync()
    {
        if (seriesId == 0)
            books = await shop.GetBooks();
        else
            books = await shop.GetBooksInSeries(seriesId);
    }

    private async Task AllFav(string name)
    {
        favourites = await shop.AllFarourite(name);
    }
    private async Task AddToFav(int id, string name)
    {
        await shop.AddToFavourite(id, name);
    }

    private async Task AllCardItem(string name)
    {
        cardItems = await shop.AllCardItem(name);
    }
    private async Task AddToCart(int id, string name)
    {
        await shop.AddToCart(id, name);
    }
}